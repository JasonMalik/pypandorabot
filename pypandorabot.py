import urllib2
import urllib
import xmltodict

'''
If the bot is missing (wrond id) the server return status = 3
'''
class MissingBot(Exception):
     def __str__(self):
         return repr("The status returned code 3, the bot is missing")


class Pandorabot:
    PANDORABOTS_URL = "http://www.pandorabots.com/pandora/talk-xml"

    bot_id = None
    cust_id = None

    def __init__(self,bot_id,cust_id=None):
        self.bot_id = bot_id
        self.cust_id = cust_id

    def talk(self,input):

        params = {'botid': self.bot_id,'input': input}

        postData = urllib.urlencode({'botid': self.bot_id,'custid': self.cust_id, 'input': input} if self.cust_id else {'botid': self.bot_id,'input': input})

        request = urllib2.Request(self.PANDORABOTS_URL+'?'+postData)
        response = urllib2.urlopen(request)

        parsed = xmltodict.parse(response)

        if(parsed['result']['@status'] == '3'):
            raise MissingBot

        '''
        cust_id it's a parameter used like a session id, it's generated by the server and it's auto stored by the code,
        however if you want you can set it to None by calling the method reset()
        '''
        if(self.cust_id is None):
            self.cust_id = parsed['result']['@custid']

        return parsed['result']['that']

    def getCustId(self):
        return self.cust_id

    def reset(self):
        self.cust_id = None

